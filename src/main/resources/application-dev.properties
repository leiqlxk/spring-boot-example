database.driverName=com.mysql.jdbc.Driver
database.url=jdbc:mysql://120.78.210.146:3306/sampledb
database.userName=root
database.password=Zh@123456

#日志配置
logging.level.root=debug
logging.level.org.springframework=debug
logging.level.org.mybatis=debug

#数据源配置
#可写可不写，spring boot会尽可能地去判断数据源是什么类型的，然后根据其默认的情况去匹配驱动类
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
spring.datasource.url=jdbc:mysql://120.78.210.146:3306/sampledb
spring.datasource.username=root
spring.datasource.password=Zh@123456
#最大等待连接中的数量,设0为没有限制
spring.datasource.dbcp2.max-idle=10
#最大连接活动数
spring.datasource.dbcp2.max-total=50
#最大等待时间，单位毫秒
spring.datasource.dbcp2.max-wait-millis=10
#数据库初始化连接数
spring.datasource.dbcp2.initial-size=5

#JPA相关配置
#使用MySQL数据库方言
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#打印数据库SQL
spring.jpa.show-sql=true
#选择Hibernate数据定义语言策略为update
spring.jpa.hibernate.ddl-auto=update

#mybatis配置
#mybatis映射文件通配
mybatis.mapper-locations=classpath:org/lql/database/mybatis/mybatisdao/*.xml
#mybatis扫描别名包，和注解@Alias联用，如为显示其别名则可直接使用类名
mybatis.type-aliases-package=org.lql.database.mybatis.mybatisdomain
#配置typeHandler的扫描包
mybatis.type-handlers-package=org.lql.database.enumeration
#配置MyBaits插件(拦截器)
#mybatis.configuration.interceptors=org.lql.database.mybatis.plugin.MyPlugin
#MyBatis配置文件，当你的配置比较复杂的时候可以使用它
#mybatis.config-location=classpath:mybatis/mybatis-config.xml
#级联延迟加载属性配置
#mybatis.configuration.aggressive-lazy-loading=
#执行器（Executor），可以配置SIMPLE，REUSE，BATCH，默认为 SIMPLE
#mybatis.executor-type=

#配置Redis服务器属性
spring.redis.post=6379
spring.redis.host=127.0.0.1
spring.redis.password=
#Redis连接超时时间，单位毫秒
spring.redis.timeout=1000
#配置连接池属性
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000

#配置缓存管理器
#如果由底层的缓存管理器支持创建，以逗号分隔的列表来缓存名称
spring.cache.cache-names=redisCache
#caffeine缓存配置细节
#spring.cache.caffeine.spec=
#couchbase缓存超时时间，默认永不超时
#spring.cache.couchbase.expiration=0ms
#配置echcache缓存初始化文件位置
#spring.cache.ehcache.config=
#infinispan缓存配置文件
#spring.cache.infinispan.config=
#jcache缓存配置文件
#spring.cache.jcache.config=
#jcacahe缓存提供者配置
#spring.cache.jcache.provider=
#是否允许redis缓存空值
spring.cache.redis.cache-null-values=true
#是否启用redis键前缀
spring.cache.redis.use-key-prefix=true
#redis的键前缀
spring.cache.redis.key-prefix=test_
#缓存超时时间戳，配置为0则不设置超时时间
spring.cache.redis.time-to-live=0ms
#缓存类型，在默认情况下，spring会自动根据上下文探测
spring.cache.type=redis

#配置MongoDB
#用于签名的MongoDB数据库
#spring.data.mongodb.authentication-database=
#使用字段名策略
#spring.data.mongodb.field-naming-strategy=
#GridsFs(网格文件)数据库名称
#spring.data.mongodb.grid-fs-database=
#是否启用MongoDB关于JPA的规范
#spring.data.mongodb.repositories.type=auto
#默认URI
#spring.data.mongodb.uri=mongodb://localhost/test
#数据库名称
#spring.data.mongodb.database=springboot
#用户名
#spring.data.mongodb.username=spring
#MongoDB服务器密码
#spring.data.mongodb.password=123456
#MongoDB服务器，不能设置为URI
#spring.data.mongodb.host=localhost
#端口
#spring.data.mongodb.port=27017

#配置springmvc的视图解析器，用于配置InternalResourceViewResolver
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
#异步请求超时时间，单位毫秒
#spring.mvc.async.request-timeout=
#是否使用请求参数（默认参数为format）来确定请求的媒体类型
spring.mvc.contentnegotiation.favor-parameter=false
#是否使用URL中的路径扩展来确定请求的媒体类型
spring.mvc.contentnegotiation.favor-path-extension=false
#设置内容协商向媒体类型映射文件扩展名，如YML文本
#spring.mvc.contentnegotiation.media-types.*=
#当启用favor-parameter参数时，自定义参数名
#spring.mvc.contentnegotiation.parameter-name=
#日期格式配置，如yyyy-MM-dd
#spring.mvc.date-format=
#spring.mvc.format.date=
#是否让FrameworkServlet doService方法支持TRACE请求
spring.mvc.dispatch-trace-request=false
#是否支持OPTIONS请求
spring.mvc.dispatch-options-request=true
#spring MVC的图标是否启用
#spring.mvc.favicon.enabled=true
#Servlet规范要求表格数据可用于HTTP POST而不是HTTP PUT或PATCH请求，这个选项将使得过滤器拦截HTTP PUT和PATCH，且内容类型是application/x-www-form-urlencoded的请求，并且将其转化为POST请求
spring.mvc.formcontent.filter.enabled=true
#如果配置为default，那么它将忽略模型重定向的场景
spring.mvc.ignore-default-model-on-redirect=true

#是否启用警告日志异常解决
spring.mvc.log-resolved-exception=false
#消息代码的格式化策略，如‘prefix_error_code’
#spring.mvc.message-codes-resolver-format=postfix_error_code
#是否对spring.mvc.contentnegotiation.media-types.*注册的扩展采用后缀模式匹配
spring.mvc.pathmatch.use-registered-suffix-pattern=false
#当匹配模式到请求时，是否使用后缀模式匹配（.*）
spring.mvc.pathmatch.use-suffix-pattern=false
#启用Spring Web服务Servlet的优先顺序配置
spring.mvc.servlet.load-on-startup=1
#指定静态资源
spring.mvc.static-path-pattern=/**
#如果请求找不到处理器，是否抛出NoHandlerFoundException异常
spring.mvc.throw-exception-if-no-handler-found=false

#文件上传配置用于生成StandardServletMultipartResolver，不配置直接使用默认
#是否启用Spring mvc多分部上传功能
spring.servlet.multipart.enabled=true
#将文件写入磁盘的阈值。值可以使用后缀"MB"或者"KB"来表示字节大小
spring.servlet.multipart.file-size-threshold=0
#指定默认上传的文件夹
#spring.servlet.multipart.location=
#限制单个文件最大大小
spring.servlet.multipart.max-file-size=1MB
#限制所有文件最大大小
spring.servlet.multipart.max-request-size=10MB
#是否延迟多部件文件请求的参数和文件的解析
spring.servlet.multipart.resolve-lazily=false


#国际化配置，大部分情况下使用的是JDK的ResourceBundle处理国际化信息，因此   spring主要使用ResourceBundleMessageSource这个国际化消息源
#设置国际化消息是否总是采用格式化，默认为false
spring.messages.always-use-message-format=false
#设置国际化属性名称，如果多个可以使用逗号分隔，默认为messages
spring.messages.basename=messages
#设置国际化消息缓存超时秒数，默认为永不过期，如果0表示每次都重新加载
spring.messages.cache-duration=3600
#国际化消息编码
spring.messages.encoding=utf-8
#如果没有找到特定区域设置的文件，则设置是否返回到系统区域设置
spring.messages.fallback-to-system-locale=true
#是否使用消息编码作为默认的响应消息，而非抛出NoSuchMessageException异常，只建议在开发阶段使用
spring.messages.use-code-as-default-message=false

#国际化消息解析器配置，LocaleResovler
#指定国际化区域，可以覆盖"Accept-Language"头信息
#spring.mvc.locale=
#国际化解析器，可以选择fixed或accept-header
#spring.mvc.locale-resolver=accept_header